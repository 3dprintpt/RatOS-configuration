#############################################################################################################
# 
# visual assisted offset calibration macros, called from the frontend nozzle calibration UI
# 
#############################################################################################################
[gcode_macro _NOZZLE_CALIBRATION_LOAD_TOOL]
variable_use_part_cooling_fan: False
gcode:
	# parameters
	{% set t = params.T|default(0)|int %}

	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# config
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	# load toolhead
	{% set idex_xcontrolpoint = svv.idex_xcontrolpoint|default(150)|float %}
	{% set idex_ycontrolpoint = svv.idex_ycontrolpoint|default(30)|float %}
	{% set idex_zcontrolpoint = svv.idex_zcontrolpoint|default(50)|float %}

	# echo
	RATOS_ECHO PREFIX="VAOC" MSG="Move T{t} to control point: X{idex_xcontrolpoint} Y{idex_ycontrolpoint} Z{idex_zcontrolpoint}"

	# set part cooling fans
	{% if printer["gcode_macro _NOZZLE_CALIBRATION_LOAD_TOOL"].use_part_cooling_fan|default(false)|lower == "true" %}
		SET_FAN_SPEED FAN=part_fan_t0 SPEED={0 if t != 0 else 0.3}
		SET_FAN_SPEED FAN=part_fan_t1 SPEED={0 if t == 0 else 0.3}
	{% else %}
		SET_FAN_SPEED FAN=part_fan_t0 SPEED=0
		SET_FAN_SPEED FAN=part_fan_t1 SPEED=0
	{% endif %}

	# move to control point
	_SELECT_TOOL T={t} X={idex_xcontrolpoint} Y={idex_ycontrolpoint}
	G1 Z{idex_zcontrolpoint} F{z_speed}
	G1 X{idex_xcontrolpoint} F{speed}
	G1 Y{idex_ycontrolpoint} F{speed}

[gcode_macro _NOZZLE_CALIBRATION_SET_TOOL]
gcode:
	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# get IDEX mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set toolhead = 1 if idex_mode=='primary' else 0 %}
	
	# config
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	{% if toolhead == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
		# set control point for primary toolhead

		# get current toolhead position
		{% set x = printer.toolhead.position.x|float %}
		{% set y = printer.toolhead.position.y|float %}
		{% set z = printer.toolhead.position.z|float %}

		# save current toolhead position 
		SAVE_VARIABLE VARIABLE=idex_xcontrolpoint VALUE={x}
		SAVE_VARIABLE VARIABLE=idex_ycontrolpoint VALUE={y}
		SAVE_VARIABLE VARIABLE=idex_zcontrolpoint VALUE={z}

		# echo 
		RATOS_ECHO PREFIX="VAOC" MSG="Control point was set: X{x} Y{y} Z{z}"

	{% else %}
		# set toolhead offset for secondary toolhead

		# get move distance  
		{% set move_diff_x = printer.gcode_move.gcode_position.x|float - svv.idex_xcontrolpoint|float %}
		{% set move_diff_y = printer.gcode_move.gcode_position.y|float - svv.idex_ycontrolpoint|float %}
		{% set move_diff_z = printer.gcode_move.gcode_position.z|float - svv.idex_zcontrolpoint|float %}

		# offset correction 
		SET_GCODE_OFFSET X_ADJUST={move_diff_x} Y_ADJUST={move_diff_y} Z_ADJUST={move_diff_z} MOVE=0

		# get new toolhead offset 
		{% set new_x_offset = svv.idex_xoffset - move_diff_x %}
		{% set new_y_offset = svv.idex_yoffset - move_diff_y %}
		{% set new_z_offset = svv.idex_zoffset - move_diff_z %}

		# save new toolhead offsets 
		SAVE_VARIABLE VARIABLE=idex_xoffset VALUE={new_x_offset}
		SAVE_VARIABLE VARIABLE=idex_yoffset VALUE={new_y_offset}
		SAVE_VARIABLE VARIABLE=idex_zoffset VALUE={new_z_offset}

		# echo 
		RATOS_ECHO PREFIX="VAOC" MSG="T{t} offset was set: X{new_x_offset} Y{new_y_offset} Z{new_z_offset}"

	{% endif %}

[gcode_macro _NOZZLE_CALIBRATION_PROBE_Z_OFFSET]
gcode:
	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# config
	{% set x_offset = printer["zoffsetprobe"].x_offset|default(0)|float %}
	{% set y_offset = printer["zoffsetprobe"].y_offset|default(0)|float %}
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	# probe z-offset
	{% if printer["zoffsetprobe"] is defined %}
		{% set idex_xcontrolpoint = svv.idex_xcontrolpoint|default(150)|float %}
		{% set idex_ycontrolpoint = svv.idex_ycontrolpoint|default(30)|float %}
		{% set idex_zcontrolpoint = svv.idex_zcontrolpoint|default(50)|float %}
		G1 Z{idex_zcontrolpoint} F{z_speed}
		G1 X{idex_xcontrolpoint + x_offset} Y{idex_ycontrolpoint + y_offset} F{speed}
		Z_OFFSET_PROBE
		G0 Z{idex_zcontrolpoint} F{z_speed}
		G1 X{idex_xcontrolpoint} Y{idex_ycontrolpoint} F{speed}
		UPDATE_DELAYED_GCODE ID=_NOZZLE_CALIBRATION_SET_Z_OFFSET DURATION=0.1
	{% endif %}

[delayed_gcode _NOZZLE_CALIBRATION_SET_Z_OFFSET]
gcode:
	# get IDEX mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set toolhead = 1 if idex_mode=='primary' else 0 %}

	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# config
	{% set last_z = printer["zoffsetprobe"].last_z_result|default(0)|float %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	{% if printer["zoffsetprobe"] is defined %}
		{% if toolhead == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
			# set control point

			# save new z-offset control point
			SAVE_VARIABLE VARIABLE=idex_zoffsetcontrolpoint VALUE={last_z}
			RATOS_ECHO PREFIX="VAOC" MSG="Z-offset control point set: {last_z}"

		{% else %}
			# set toolhead offset

			# get new toolhead z-offset
			{% set z = svv.idex_zoffsetcontrolpoint|float - last_z %}

			# revert original applied z-offset
			SET_GCODE_OFFSET Z_ADJUST={svv.idex_zoffset} MOVE=0

			# move to z-control point
			G0 Z{svv.idex_zcontrolpoint|float} F{z_speed}

			# apply new z-offset
			SET_GCODE_OFFSET Z_ADJUST={(0 - z)} MOVE=1

			# save new z-offset
			SAVE_VARIABLE VARIABLE=idex_zoffset VALUE={z}
			RATOS_ECHO PREFIX="VAOC" MSG="T{t} offset set: Z{z}"

		{% endif %}
	{% endif %}

[gcode_macro _NOZZLE_CALIBRATION_SWITCH_LED]
gcode:
	{% if params.STATE|default(0)|int == 1 %}
		NOZZLE_CALIBRATION_LIGHT_ON
	{% else %}  
		NOZZLE_CALIBRATION_LIGHT_OFF
	{% endif %}

[gcode_macro NOZZLE_CALIBRATION_LIGHT_ON]
gcode:
	{% if printer['neopixel nozzle_calibration_led'] is defined %}
		SET_LED LED=nozzle_calibration_led RED=1.0 GREEN=1.0 BLUE=1.0
	{% endif %}

[gcode_macro NOZZLE_CALIBRATION_LIGHT_OFF]
gcode:
	{% if printer['neopixel nozzle_calibration_led'] is defined %}
		SET_LED LED=nozzle_calibration_led RED=0.0 GREEN=0.0 BLUE=0.0
	{% endif %}

[gcode_macro VAOC_SWITCH_FAN]
gcode:
	# get IDEX mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|default('')|lower %}
	{% set t = 1 if idex_mode=='primary' else 0 %}

	# set part cooling fans
	{% if printer["gcode_macro _NOZZLE_CALIBRATION_LOAD_TOOL"].use_part_cooling_fan|default(false)|lower == "true" %}
		SET_GCODE_VARIABLE MACRO=_NOZZLE_CALIBRATION_LOAD_TOOL VARIABLE=use_part_cooling_fan VALUE=False
		SET_FAN_SPEED FAN=part_fan_t0 SPEED=0
		SET_FAN_SPEED FAN=part_fan_t1 SPEED=0
	{% else %}
		SET_GCODE_VARIABLE MACRO=_NOZZLE_CALIBRATION_LOAD_TOOL VARIABLE=use_part_cooling_fan VALUE=True
		SET_FAN_SPEED FAN=part_fan_t0 SPEED={0.3 if t == 0 else 0}
		SET_FAN_SPEED FAN=part_fan_t1 SPEED={0.3 if t == 1 else 0}
	{% endif %}
