# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

############################################################################################################# 
# VAOC - visual assisted offset calibration macros
# called from the frontend nozzle calibration UI
#############################################################################################################
[gcode_macro _VAOC]
variable_is_fixed: False                       # true  = VAOC camera is fixed on the printer
                                               # false = detachable VAOC camera
variable_additional_safe_distance: 50          # distance between the toolheads
variable_safe_z: 10                            # safe z height for VAOC start and end horizontal moves
variable_safe_z_toolshift: False               # set to true in case the camera z-reference point is lower than the z-endstop pin
variable_enable_camera_cooling: True           # part fan camera cooling master switch
variable_camera_cooling_temperature: 50        # bed temperature threshold to activate the part fan camera cooling
variable_camera_cooling_fan_speed: 0.3         # part fan speed for camera cooling
variable_is_started: False                     # false = VAOC is not started, true = VAOC is started
variable_toolchange_travel_speed: 300          # vaoc parking travel speed
variable_toolchange_travel_accel: 5000         # vaoc parking travel acceleration
variable_toolchange_zhop: 0                    # vaoc parking z-hop
variable_cache_toolchange_travel_speed: 300    # used to cache the original toolchange config
variable_cache_toolchange_travel_accel: 5000   # used to cache the original toolchange config
variable_cache_toolchange_zhop: 1.0            # used to cache the original toolchange config
gcode:


[gcode_macro _VAOC_START]
gcode:
	# vaoc config
	{% set is_fixed = true if printer["gcode_macro _VAOC"].is_fixed|default(true)|lower == 'true' else false %}
	{% set safe_z = printer["gcode_macro _VAOC"].safe_z|float %}
	{% set additional_safe_distance = printer["gcode_macro _VAOC"].additional_safe_distance|float %}

	# config
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set safe_distance = printer.configfile.settings.dual_carriage.safe_distance|float %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}

	# cache toolchange config
	SET_GCODE_VARIABLE MACRO=_VAOC VARIABLE=cache_toolchange_travel_speed VALUE={printer["gcode_macro RatOS"].toolchange_travel_speed|int}
	SET_GCODE_VARIABLE MACRO=_VAOC VARIABLE=cache_toolchange_travel_accel VALUE={printer["gcode_macro RatOS"].toolchange_travel_accel|int}
	SET_GCODE_VARIABLE MACRO=_VAOC VARIABLE=cache_toolchange_zhop VALUE={printer["gcode_macro RatOS"].toolchange_zhop|float}

	# set toolchange config
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=toolchange_travel_speed VALUE={printer["gcode_macro _VAOC"].toolchange_travel_speed|int}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=toolchange_travel_accel VALUE={printer["gcode_macro _VAOC"].toolchange_travel_accel|int}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=toolchange_zhop VALUE={printer["gcode_macro _VAOC"].toolchange_zhop|float}

	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# get reference point coordinates
	{% set idex_xcontrolpoint = svv.idex_xcontrolpoint|default(printable_x_max/2)|float %}
	{% set idex_ycontrolpoint = svv.idex_ycontrolpoint|default(printable_y_max/2)|float %}
	{% set idex_zcontrolpoint = svv.idex_zcontrolpoint|default(50)|float %}

	# get parking position
	{% set parking_position_t0 = printer["gcode_macro T0"].parking_position|float %}
	{% set parking_position_t1 = printer["gcode_macro T1"].parking_position|float %}
	{% if is_fixed %}
		{% set parking_position_t0 = idex_xcontrolpoint - safe_distance - additional_safe_distance %}
		{% set parking_position_t1 = idex_xcontrolpoint + safe_distance + additional_safe_distance %}
	{% endif %}

	# echo
	RATOS_ECHO PREFIX="VAOC" MSG="START T{t} X_REFERENCE:{idex_xcontrolpoint} Y_REFERENCE:{idex_ycontrolpoint} Z_REFERENCE:{idex_zcontrolpoint} PARK_T0:{parking_position_t0} PARK_T1:{parking_position_t1}"

	# turn VAOC LED on
	_LED_VAOC_ON

	# Home if needed
	MAYBE_HOME

	# move to safe z if needed
	{% if printer.toolhead.position.z|float < safe_z %}
		G1 Z{safe_z} F{z_speed}
	{% endif %}

	# move to safe y if needed
	{% if printer.toolhead.position.y|float > printable_y_max %}
		G1 Y{printable_y_max} F{speed}
	{% endif %}

	# set IDEX single mode if needed
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% if idex_mode == "copy" or idex_mode == "mirror" %}
		IDEX_SINGLE
	{% endif %}

	# bring toolheads into position
	{% if is_fixed %}
		_SELECT_TOOL T=0 TOOLSHIFT=false
		{% if default_toolhead == 0 %}
			G1 X{idex_xcontrolpoint} F{speed}
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
			G1 X{idex_xcontrolpoint + safe_distance + additional_safe_distance} F{speed}
		{% else %}
			G1 X{idex_xcontrolpoint - safe_distance - additional_safe_distance} F{speed}
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
			G1 X{idex_xcontrolpoint} F{speed}
		{% endif %}
		SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
	{% else %}
		_SELECT_TOOL T={default_toolhead} TOOLSHIFT=false
	{% endif %}

	# move to control point
	G1 X{idex_xcontrolpoint} F{speed}
	G1 Y{idex_ycontrolpoint} F{speed}
	G1 Z{idex_zcontrolpoint} F{z_speed}

	# select toolhead
	_SELECT_TOOL T={default_toolhead} X={idex_xcontrolpoint} Y={idex_ycontrolpoint} PARK_T0={parking_position_t0} PARK_T1={parking_position_t1}

	# set part cooling fans
	_VAOC_SET_CAMERA_COOLING T={default_toolhead}

	SET_GCODE_VARIABLE MACRO="_VAOC" VARIABLE="is_started" VALUE="True"


[gcode_macro _VAOC_END]
gcode:
	# vaoc config
	{% set safe_z = printer["gcode_macro _VAOC"].safe_z|float %}

	# config
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	# disable camera cooling
	SET_FAN_SPEED FAN=part_fan_t0 SPEED=0
	SET_FAN_SPEED FAN=part_fan_t1 SPEED=0

	# move to safe z before going back to the printable area
	{% if printer.toolhead.position.z|float < safe_z %}
		G1 Z{safe_z} F{z_speed}
	{% endif %}

	# park toolheads, also makes sure the gantry is within the printable y area
	PARK_TOOLHEAD

	# turn camera LED off
	_LED_VAOC_OFF

	# reset toolchange config
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=toolchange_travel_speed VALUE={printer["gcode_macro _VAOC"].cache_toolchange_travel_speed|int}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=toolchange_travel_accel VALUE={printer["gcode_macro _VAOC"].cache_toolchange_travel_accel|int}
	SET_GCODE_VARIABLE MACRO=RatOS VARIABLE=toolchange_zhop VALUE={printer["gcode_macro _VAOC"].cache_toolchange_zhop|float}

	SET_GCODE_VARIABLE MACRO="_VAOC" VARIABLE="is_started" VALUE="False"


[gcode_macro _VAOC_LOAD_TOOL]
gcode:
	# parameters
	{% set t = params.T|default(0)|int %}

	# config
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set safe_distance = printer.configfile.settings.dual_carriage.safe_distance|float %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}

	# vaoc config
	{% set is_fixed = true if printer["gcode_macro _VAOC"].is_fixed|default(true)|lower == 'true' else false %}
	{% set safe_z = printer["gcode_macro _VAOC"].safe_z|float %}
	{% set safe_z_toolshift = true if printer["gcode_macro _VAOC"].safe_z_toolshift|default(true)|lower == 'true' else false %}
	{% set additional_safe_distance = printer["gcode_macro _VAOC"].additional_safe_distance|float %}

	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# get reference point coordinates
	{% set idex_xcontrolpoint = svv.idex_xcontrolpoint|default(150)|float %}
	{% set idex_ycontrolpoint = svv.idex_ycontrolpoint|default(30)|float %}
	{% set idex_zcontrolpoint = svv.idex_zcontrolpoint|default(50)|float %}

	# echo
	RATOS_ECHO PREFIX="VAOC" MSG="Move T{t} to control point: X{idex_xcontrolpoint} Y{idex_ycontrolpoint} Z{idex_zcontrolpoint} IS_ON_REAR_ARM={is_fixed}"

	# set part cooling fans
	_VAOC_SET_CAMERA_COOLING T={t}

	# get parking positions
	{% set parking_position_t0 = printer["gcode_macro T0"].parking_position|float %}
	{% set parking_position_t1 = printer["gcode_macro T1"].parking_position|float %}
	{% if is_fixed %}
		{% set parking_position_t0 = idex_xcontrolpoint - safe_distance - additional_safe_distance %}
		{% set parking_position_t1 = idex_xcontrolpoint + safe_distance + additional_safe_distance %}
	{% endif %}

	# z-hop if needed
	{% if safe_z_toolshift %}
		G1 Z{safe_z} F{z_speed}
	{% else %}
		G1 Z{idex_zcontrolpoint} F{z_speed}
	{% endif %}

	# select toolhead
	_SELECT_TOOL T={t} X={idex_xcontrolpoint} Y={idex_ycontrolpoint} PARK_T0={parking_position_t0} PARK_T1={parking_position_t1}

	# z-drop if needed
	{% if safe_z_toolshift %}
		G1 Z{idex_zcontrolpoint} F{z_speed}
	{% endif %}


[gcode_macro _VAOC_SET_CAMERA_COOLING]
gcode:
	# parameters
	{% set t = params.T|default(0)|int %}

	# vaoc config
	{% set enable_camera_cooling = true if printer["gcode_macro _VAOC"].enable_camera_cooling|default(true)|lower == 'true' else false %}
	{% set camera_cooling_temperature = printer["gcode_macro _VAOC"].camera_cooling_temperature|float %}
	{% set camera_cooling_fan_speed = printer["gcode_macro _VAOC"].camera_cooling_fan_speed|float %}

	# set part cooling fans
	{% if printer.heater_bed.temperature >= camera_cooling_temperature and enable_camera_cooling %}
		SET_FAN_SPEED FAN=part_fan_t0 SPEED={camera_cooling_fan_speed if t == 0 else 0}
		SET_FAN_SPEED FAN=part_fan_t1 SPEED={camera_cooling_fan_speed if t == 1 else 0}
	{% else %}
		SET_FAN_SPEED FAN=part_fan_t0 SPEED=0
		SET_FAN_SPEED FAN=part_fan_t1 SPEED=0
	{% endif %}


[gcode_macro _VAOC_SET_TOOL]
gcode:
	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# get IDEX mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set toolhead = 1 if idex_mode=='primary' else 0 %}
	
	# config
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	{% if toolhead == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
		# set control point for primary toolhead

		# get current toolhead position
		{% set x = printer.toolhead.position.x|float %}
		{% set y = printer.toolhead.position.y|float %}
		{% set z = printer.toolhead.position.z|float %}

		# save current toolhead position 
		SAVE_VARIABLE VARIABLE=idex_xcontrolpoint VALUE={x}
		SAVE_VARIABLE VARIABLE=idex_ycontrolpoint VALUE={y}
		SAVE_VARIABLE VARIABLE=idex_zcontrolpoint VALUE={z}

		# echo 
		RATOS_ECHO PREFIX="VAOC" MSG="Control point was set: X{x} Y{y} Z{z}"

	{% else %}
		# set toolhead offset for secondary toolhead

		# get move distance  
		{% set move_diff_x = printer.gcode_move.gcode_position.x|float - svv.idex_xcontrolpoint|float %}
		{% set move_diff_y = printer.gcode_move.gcode_position.y|float - svv.idex_ycontrolpoint|float %}
		{% set move_diff_z = printer.gcode_move.gcode_position.z|float - svv.idex_zcontrolpoint|float %}

		# offset correction 
		SET_GCODE_OFFSET X_ADJUST={move_diff_x} Y_ADJUST={move_diff_y} Z_ADJUST={move_diff_z} MOVE=0

		# get new toolhead offset 
		{% set new_x_offset = svv.idex_xoffset - move_diff_x %}
		{% set new_y_offset = svv.idex_yoffset - move_diff_y %}
		{% set new_z_offset = svv.idex_zoffset - move_diff_z %}

		# save new toolhead offsets 
		SAVE_VARIABLE VARIABLE=idex_xoffset VALUE={new_x_offset}
		SAVE_VARIABLE VARIABLE=idex_yoffset VALUE={new_y_offset}
		SAVE_VARIABLE VARIABLE=idex_zoffset VALUE={new_z_offset}

		# echo 
		RATOS_ECHO PREFIX="VAOC" MSG="T{t} offset was set: X{new_x_offset} Y{new_y_offset} Z{new_z_offset}"

	{% endif %}


[gcode_macro _VAOC_MOVE]
gcode:
	# parameters
	{% set x = params.X|default(0)|float %}
	{% set y = params.Y|default(0)|float %}
	{% set z = params.Z|default(0)|float %}

	# Move toolhead
	G91                     # Relative positioning
	{% if z != 0 %}
		RATOS_ECHO PREFIX="VAOC" MSG="Move toolhead: G1 Z{z} F300"
		G1 Z{z} F300
	{% else %}
		RATOS_ECHO PREFIX="VAOC" MSG="Move toolhead: G1 X{x} Y{y} F18000"
		G1 X{x} Y{y} F18000			
	{% endif %}
	G90                     # Absolute positioning

[gcode_macro _VAOC_PROBE_Z_OFFSET]
gcode:
	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# config
	{% set x_offset = printer["z_offset_probe"].x_offset|default(0)|float %}
	{% set y_offset = printer["z_offset_probe"].y_offset|default(0)|float %}
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	# probe z-offset
	{% if printer["z_offset_probe"] is defined %}
		{% set idex_xcontrolpoint = svv.idex_xcontrolpoint|default(150)|float %}
		{% set idex_ycontrolpoint = svv.idex_ycontrolpoint|default(30)|float %}
		{% set idex_zcontrolpoint = svv.idex_zcontrolpoint|default(50)|float %}
		G1 Z{idex_zcontrolpoint} F{z_speed}
		G1 X{idex_xcontrolpoint + x_offset} Y{idex_ycontrolpoint + y_offset} F{speed}
		Z_OFFSET_PROBE
		G0 Z{idex_zcontrolpoint} F{z_speed}
		G1 X{idex_xcontrolpoint} Y{idex_ycontrolpoint} F{speed}
		UPDATE_DELAYED_GCODE ID=_VAOC_SET_Z_OFFSET DURATION=0.1
	{% endif %}


[delayed_gcode _VAOC_SET_Z_OFFSET]
gcode:
	# get IDEX mode
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set toolhead = 1 if idex_mode=='primary' else 0 %}

	# config
	{% set last_z = printer["z_offset_probe"].last_z_result|default(0)|float %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	{% if printer["z_offset_probe"] is defined %}
		{% if toolhead == printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
			# set control point

			# save new z-offset control point
			SAVE_VARIABLE VARIABLE=idex_zoffsetcontrolpoint VALUE={last_z}
			RATOS_ECHO PREFIX="VAOC" MSG="Z-offset control point set: {last_z}"

		{% else %}
			# set toolhead offset

			# get new toolhead z-offset
			{% set z = svv.idex_zoffsetcontrolpoint|float - last_z %}

			# revert original applied z-offset
			SET_GCODE_OFFSET Z_ADJUST={svv.idex_zoffset} MOVE=0

			# move to z-control point
			G0 Z{svv.idex_zcontrolpoint|float} F{z_speed}

			# apply new z-offset
			SET_GCODE_OFFSET Z_ADJUST={(0 - z)} MOVE=1

			# save new z-offset
			SAVE_VARIABLE VARIABLE=idex_zoffset VALUE={z}
			RATOS_ECHO PREFIX="VAOC" MSG="T{t} offset set: Z{z}"

		{% endif %}
	{% endif %}


[gcode_macro _VAOC_SWITCH_LED]
gcode:
	{% if params.STATE|default(0)|int == 1 %}
		_LED_VAOC_ON
	{% else %}  
		_LED_VAOC_OFF
	{% endif %}
