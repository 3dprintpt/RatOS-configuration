[gcode_macro Z_PROBE_TEST]
gcode:
	# Setup debugging
	{% set debug_previously_enabled = False %}
	{% if printer["gcode_macro DEBUG_ECHO"].enabled|lower == 'true' %}
		{% set debug_previously_enabled = True %}
	{% else %}
		ENABLE_DEBUG
	{% endif %}

	SET_GCODE_VARIABLE VARIABLE=primary_results VALUE={primary_results}
	{% if params.HOT|default(False)|lower == 'true' %}
		{% set t0_temp = params.T0_TEMP|default(150)|int %}
		{% set t1_temp = params.T1_TEMP|default(150)|int %}
		{% set bed_temp = params.BED_TEMP|default(115)|int %}
		{% set chamber_temp = params.CHAMBER_TEMP|default(0)|int %}
		_VAOC_START t0_temp={t0_temp} t1_temp={t1_temp} bed_temp={bed_temp} chamber_temp={chamber_temp}
	{% else %}
		_VAOC_START
	{% endif %}
	{% for i in range(3) %}
		_VAOC_LOAD_TOOL T=0 AUTO_Z_OFFSET=True
		_VAOC_TEST_Z_OFFSET
		ADD_PRIMARY_TOOLHEAD_RESULT
		SHAKE_IT
		_VAOC_LOAD_TOOL T=1 AUTO_Z_OFFSET=True
		_VAOC_TEST_Z_OFFSET
		ADD_SECONDARY_TOOLHEAD_RESULT
		SHAKE_IT
	{% endfor %}
	_VAOC_LOAD_TOOL T=0 AUTO_Z_OFFSET=True
	_VAOC_TEST_Z_OFFSET
	ADD_PRIMARY_TOOLHEAD_RESULT
	SHAKE_IT
	_VAOC_LOAD_TOOL T=1 AUTO_Z_OFFSET=True
	_VAOC_TEST_Z_OFFSET
	ADD_SECONDARY_TOOLHEAD_RESULT

	_VAOC_END
	
	# Calculate results
	{% set primary_results = printer["gcode_macro ADD_PRIMARY_TOOLHEAD_RESULT"].results %}
	{% set secondary_results = printer["gcode_macro ADD_SECONDARY_TOOLHEAD_RESULT"].results %}
	{% if primary_results|sum > 0 and primary_results|count > 0 %}
	{% set primary_average = (primary_results|sum/(primary_results|count))|round(6) %}
	{% else %}
	{% set primary_average = 0 %}
	{% endif %}
	{% if secondary_results|sum > 0 and secondary_results|count > 0 %}
	{% set secondary_average = (secondary_results|sum/(secondary_results|count))|round(6) %}
	{% else %}
	{% set secondary_average = 0 %}
	{% endif %}
	{% set primary_min = primary_results|min %}
	{% set primary_max = primary_results|max %}
	{% set secondary_min = secondary_results|min %}
	{% set secondary_max = secondary_results|max %}
	{% set primary_range = primary_max - primary_min %}
	{% set secondary_range = secondary_max - secondary_min %}
	RATOS_ECHO MSG="Average T0 result: {primary_average}, Range: {primary_range|round(6)}, Min: {primary_min}, Max: {primary_max}"
	RATOS_ECHO MSG="Average T1 result: {secondary_average}, Range: {secondary_range|round(6)}, Min: {secondary_min}, Max: {secondary_max}"
	{% if (primary_range - secondary_range) > 0.01 %}
		RATOS_ECHO MSG="T0 is drifting significantly more than T1."
	{% endif %}
	{% if (secondary_range - primary_range) > 0.01 %}
		RATOS_ECHO MSG="T1 is drifting significantly more than T0."
	{% endif %}
	
	DEBUG_ECHO MSG="T0 result set: {primary_results}"
	DEBUG_ECHO MSG="T1 result set: {secondary_results}"

	# Disable debugging if it was previously disabled
	{% if debug_previously_enabled == False %}
	DISABLE_DEBUG
	{% endif %}

[gcode_macro SHAKE_IT]
gcode:

	# variables
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}

	G0 Z{z_hop} F6000
	{% for i in range(3) %}
		{% for i in range(5) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2 + 25} Y{printable_y_max/2 + 25}
			G0 X{printable_x_max/2 - 25} Y{printable_y_max/2 - 25}
			G0 X{printable_x_max/2 + 25} Y{printable_y_max/2 - 25}
			G0 X{printable_x_max/2 - 25} Y{printable_y_max/2 + 25}
		{% endfor %}
		{% for i in range(10) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2 + 1} Y{printable_y_max/2 + 1}
			G0 X{printable_x_max/2 - 1} Y{printable_y_max/2 - 1}
			G0 X{printable_x_max/2 + 1} Y{printable_y_max/2 - 1}
			G0 X{printable_x_max/2 - 1} Y{printable_y_max/2 + 1}
		{% endfor %}
		{% for i in range(2) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2 + 50} Y{printable_y_max/2 + 50}
			G0 X{printable_x_max/2 - 50} Y{printable_y_max/2 - 50}
			G0 X{printable_x_max/2 + 50} Y{printable_y_max/2 - 50}
			G0 X{printable_x_max/2 - 50} Y{printable_y_max/2 + 50}
		{% endfor %}
		{% for i in range(5) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2 + 25} Y{printable_y_max/2}
			G0 X{printable_x_max/2 - 25} Y{printable_y_max/2}
		{% endfor %}
		{% for i in range(5) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2} Y{printable_y_max/2 + 25}
			G0 X{printable_x_max/2} Y{printable_y_max/2 - 25}
		{% endfor %}
		{% for i in range(10) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2 + 1} Y{printable_y_max/2}
			G0 X{printable_x_max/2 - 1} Y{printable_y_max/2}
		{% endfor %}
		{% for i in range(10) %}
			G0 X{printable_x_max/2} Y{printable_y_max/2} F{speed}
			G0 X{printable_x_max/2} Y{printable_y_max/2 + 1}
			G0 X{printable_x_max/2} Y{printable_y_max/2 - 1}
		{% endfor %}
	{% endfor %}

[gcode_macro ADD_PRIMARY_TOOLHEAD_RESULT]
variable_results: []
gcode:
	{% set last_z = printer["z_offset_probe"].last_z_result|default(0)|float %}
	{% set new_results = results + [last_z] %}
	SET_GCODE_VARIABLE MACRO=ADD_PRIMARY_TOOLHEAD_RESULT VARIABLE=results VALUE="{new_results}"
	RATOS_ECHO MSG="T0 result set updated: {new_results}"

[gcode_macro ADD_SECONDARY_TOOLHEAD_RESULT]
variable_results: []
gcode:
	{% set last_z = printer["z_offset_probe"].last_z_result|default(0)|float %}
	{% set new_results = results + [last_z] %}
	SET_GCODE_VARIABLE MACRO=ADD_SECONDARY_TOOLHEAD_RESULT VARIABLE=results VALUE="{new_results}"
	RATOS_ECHO MSG="T1 result set updated: {new_results}"

[gcode_macro _VAOC_TEST_Z_OFFSET]
gcode:
	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	{% set act_t = 1 if idex_mode == 'primary' else 0 %}
	
	# config
	{% set z_offset_probe_x_offset = printer["z_offset_probe"].x_offset|default(0)|float %}
	{% set z_offset_probe_y_offset = printer["z_offset_probe"].y_offset|default(0)|float %}
	{% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}

	# ratos variables file
	{% set svv = printer.save_variables.variables %}

	# get reference point coordinates
	{% set idex_xcontrolpoint = svv.idex_xcontrolpoint|default(150)|float %}
	{% set idex_ycontrolpoint = svv.idex_ycontrolpoint|default(30)|float %}
	{% set idex_zcontrolpoint = svv.idex_zcontrolpoint|default(50)|float %}

	# mave to control point
	G1 Z{idex_zcontrolpoint} F{z_speed}
	G1 X{idex_xcontrolpoint + z_offset_probe_x_offset} Y{idex_ycontrolpoint + z_offset_probe_y_offset} F{speed}

	# probe z-offset
	_VAOC_Z_OFFSET_PROBE_CURRENT_POSITION
	G0 Z{idex_zcontrolpoint} F{z_speed}