
#####
# RMMU UNLOAD MACROS
#####
[gcode_macro _RMMU_UNLOAD_FILAMENT_FROM_NOZZLE_TO_COOLING_POSITION]
gcode:
	# parameter
	{% set t = params.T|int %}

	# get current printing mode
	{% set is_printing_gcode = true if printer["gcode_macro START_PRINT"].is_printing_gcode|default(true)|lower == 'true' else false %}

	DEBUG_ECHO PREFIX="_RMMU_UNLOAD_FILAMENT_FROM_NOZZLE_TO_COOLING_POSITION" MSG="T={t}, is_printing_gcode={is_printing_gcode}"

	{% if is_printing_gcode and "xyz" in printer.toolhead.homed_axes and printer["rmmu"].filament_changes|int > 0 %}

		# config
		{% set purge_before_unload = printer["gcode_macro T%s" % t].purge_before_unload|float %}

		# cache current position
		{% set pos = printer.toolhead.position %}
		SET_GCODE_VARIABLE MACRO=_RMMU_ON_TOOL_HAS_CHANGED VARIABLE=x VALUE={pos.x}
		SET_GCODE_VARIABLE MACRO=_RMMU_ON_TOOL_HAS_CHANGED VARIABLE=y VALUE={pos.y}
		SET_GCODE_VARIABLE MACRO=_RMMU_ON_TOOL_HAS_CHANGED VARIABLE=z VALUE={pos.z}

		# cache current speed
		SET_GCODE_VARIABLE MACRO=_RMMU_ON_TOOL_HAS_CHANGED VARIABLE=fan_speed VALUE={printer["fan"].speed|float}

		# turn fan off
		M106 S0

		# raise z a bit
		G1 Z{pos.z + 1} F18000

		# move to parking position
		_MOVE_TO_PARKING_POSITION TOOLHEAD=0

		# purge
		{% if purge_before_unload > 0 %}
			_PURGE_BEFORE_UNLOAD TOOLHEAD={t}
		{% else %}
			# wait a bit for the filament to melt in case it was a short move
			G4 P3000
		{% endif %}

	{% endif %}

	# unload filament
	_UNLOAD_FILAMENT_FROM_NOZZLE_TO_COOLING_ZONE TOOLHEAD=0

	# wait for moves to finish
	M400


#####
# RMMU EVENTS
#####
[gcode_macro _RMMU_ON_TOOL_HAS_CHANGED]
variable_x: 0
variable_y: 0
variable_z: 0
variable_fan_speed: 0
gcode:
	# parameter
	{% set t = params.T|int %}

	# get current printing mode
	{% set is_printing_gcode = true if printer["gcode_macro START_PRINT"].is_printing_gcode|default(true)|lower == 'true' else false %}

	DEBUG_ECHO PREFIX="_RMMU_ON_TOOL_HAS_CHANGED" MSG="T={t}, is_printing_gcode={is_printing_gcode}"

	{% if is_printing_gcode and "xyz" in printer.toolhead.homed_axes and printer["rmmu"].filament_changes|int > 0 %}

		# config
		{% set purge_after_load = printer["gcode_macro T%s" % t].purge_after_load|float %}
		{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}

		# Handle toolhead settings
		CACHE_TOOLHEAD_SETTINGS
		SET_MACRO_TRAVEL_SETTINGS

		# purge filament
		_PURGE_FILAMENT TOOLHEAD=0 E={purge_after_load}
		_CLEANING_MOVE TOOLHEAD=0

		# turn fan back on
		M106 S{(255 * fan_speed)}

		# reset fan speed cache
		SET_GCODE_VARIABLE MACRO=_RMMU_ON_TOOL_HAS_CHANGED VARIABLE=fan_speed VALUE=0

		# move back to printing position
		G1 X{x} Y{y} Z{z} F{speed}

		# Handle toolhead settings
		RESTORE_TOOLHEAD_SETTINGS

	{% endif %}


#####
# RMMU PAUSE RESUME
#####
[gcode_macro _PAUSE_RMMU]
gcode:
	# get current printing mode
	{% set is_printing_gcode = true if printer["gcode_macro START_PRINT"].is_printing_gcode|default(true)|lower == 'true' else false %}

	{% if is_printing_gcode and "xyz" in printer.toolhead.homed_axes %}
		SAVE_GCODE_STATE NAME=PAUSE_state
		G91
		G1 Z+10 F3000
		G90
		{printer.configfile.settings['gcode_macro pause'].rename_existing}
	{% endif %}


[gcode_macro _RESUME_RMMU]
gcode:
	{% if printer.pause_resume.is_paused %}
		RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 SPEED=600
		{printer.configfile.settings['gcode_macro resume'].rename_existing}	
	{% endif %}


#####
# FILAMENT MACROS
#####
[gcode_macro HOME_FILAMENT]
variable_parameter_TOOL : -1
gcode:
	# parameter
	{% set t = params.TOOLHEAD|default(-1)|int %}

	{% if printer["rmmu"] is defined %}
		{% if t >= -1 and t < printer["rmmu"].tool_count %}
			RMMU_HOME_FILAMENT TOOL={t}
		{% else %}
			RATOS_ECHO MSG="Please select correct toolhead!"
		{% endif %}
	{% endif %}


[gcode_macro MOVE_FILAMENT]
gcode:
	# parameter
	{% set t = params.TOOLHEAD|default(-1)|int %}
	{% set move = params.MOVE|default(50)|int %}
	{% set speed = params.SPEED|default(10)|int %}
	{% set sync = params.SYNC_EXTRUDER|default(0)|int %}

	{% if printer["rmmu"] is defined %}
		{% if t >= 0 and t < printer["rmmu"].tool_count %}
			{% if printer["rmmu"].is_homed|default('false')|lower != 'true' %}
				RMMU_HOME
			{% endif %}
			RMMU_SELECT_TOOL TOOL={t}
			{% if sync == 0 %}
				MANUAL_STEPPER STEPPER=rmmu_pulley SET_POSITION=0 MOVE={move} SPEED={speed} ACCEL={printer.toolhead.max_accel}
			{% else %}
				G92 E0
				MANUAL_STEPPER STEPPER=rmmu_pulley SET_POSITION=0 MOVE={move} SPEED={speed} ACCEL={printer.toolhead.max_accel} SYNC=0
				G0 E{move} F{(speed * 60)}
				MANUAL_STEPPER STEPPER=rmmu_pulley SYNC=1
				MANUAL_STEPPER STEPPER=rmmu_pulley SET_POSITION=0
				G92 E0
			{% endif %}
			RMMU_SELECT_TOOL TOOL=-1
		{% else %}
			RATOS_ECHO MSG="Please select correct toolhead!"
		{% endif %}
	{% endif %}


[gcode_macro EJECT_FILAMENT]
variable_parameter_TOOL : -1
gcode:
	# parameter
	{% set t = params.TOOLHEAD|default(-1)|int %}

	{% if printer["rmmu"] is defined %}
		{% if t >= -1 and t < printer["rmmu"].tool_count %}
			RMMU_EJECT_FILAMENT TOOL={t}
		{% else %}
			RATOS_ECHO MSG="Please select correct toolhead!"
		{% endif %}
	{% endif %}


#####
# RMMU OVERRIDES
#####
[gcode_macro M84]
rename_existing: M84.1
gcode:
	# reset is_printing_gcode state
	SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=is_printing_gcode VALUE=False
	# reset RMMU
	RMMU_RESET
	# turn motors off
	M84.1
	# visual feedback
	_LED_MOTORS_OFF
