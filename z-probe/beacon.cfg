# WARNING. DO NOT EDIT THIS FILE.
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

# Configurator Metadata
# {
#   "type": "static-probe",
#   "title": "Beacon"
# }

[beacon]
serial: /dev/beacon
x_offset: 0 
y_offset: 22.5 
mesh_main_direction: x
mesh_runs: 1
speed: 15.
lift_speed: 80.
#contact_max_hotend_temperature: 190

[stepper_z]
homing_retract_dist: 0

[gcode_macro RatOS]
variable_beacon_bed_mesh_scv: 25                   # square corner velocity for bed meshing with proximity method
variable_beacon_contact_z_homing: False            # printer z-homing with contact method
variable_beacon_contact_z_calibration: False       # contact z-calibration before the print starts
                                                   # after changing this variable please run a recalibration before you use the printer  
												   # if you use a smooth PEI sheet turn this feature off

variable_beacon_contact_calibration_location: "center"  # center = center of the build plate
                                                        # front = front center
														# corner = front corner

variable_beacon_contact_calibrate_margin_x: 30     # x-margin if calibrate in front corners
variable_beacon_contact_bed_mesh: False            # bed mesh with contact method
variable_beacon_contact_bed_mesh_samples: 2        # probe samples for contact bed mesh
variable_beacon_contact_z_tilt_adjust: False       # z-tilt adjust with contact method
variable_beacon_contact_z_tilt_adjust_samples: 2   # probe samples for contact z-tilt adjust
variable_beacon_contact_prime_probing: False       # probe for priming with contact method
variable_beacon_contact_calibration_temp: 170      # nozzle temperature for auto calibration


[gcode_macro POKELOOP]
gcode:
  {% for i in range(100) %}
      beacon_poke speed=3 top=5 bottom=-0.3
  {% endfor %}


[gcode_macro BEACON_MEASURE_TEMP_OFFSET]
gcode:
	# config
	{% set test_margin = 30 %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printable_x_max / 2 %}
	{% endif %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printable_y_max / 2 %}
	{% endif %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}

	# home printer if needed
	MAYBE_HOME

	# automatic bed leveling
	{% set needs_rehoming = False %}
	{% if printer.z_tilt is defined and not printer.z_tilt.applied %}
		RATOS_ECHO MSG="Adjusting Z tilt..."
		Z_TILT_ADJUST
		RATOS_ECHO MSG="Rehoming Z after Z tilt adjustment..."
		{% set needs_rehoming = True %}
	{% endif %}
	{% if printer.quad_gantry_level is defined and not printer.quad_gantry_level.applied %}
	 	RATOS_ECHO MSG="Running quad gantry leveling..."
		QUAD_GANTRY_LEVEL 
		RATOS_ECHO MSG="Rehoming Z after quad gantry leveling..."
		{% set needs_rehoming = True %}
	{% endif %}

	# Home again as Z will have changed after automatic bed leveling and bed heating.
	{% if needs_rehoming %}
		G0 Z{z_hop} F{z_hop_speed}
		G0 X{safe_home_x} Y{safe_home_y} F{speed}
		{% if printer.configfile.settings.beacon is defined and beacon_contact_z_homing %}
			BEACON_AUTO_CALIBRATE  
			G0 Z{z_hop} F{z_hop_speed}
			G0 X{safe_home_x} Y{safe_home_y} F{speed}
		{% else %}
			G28 Z
		{% endif %}
	{% endif %}

	# beacon autocalibration
	G0 Z{z_hop} F{z_speed}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	BEACON_AUTO_CALIBRATE

	{% for i in range(20) %}
		beacon_poke speed=3 top=5 bottom=-0.3
	{% endfor %}

	DISABLE_DEBUG	
	RATOS_ECHO PREFIX="BEACON" MSG="Starting test. Please wait..."

	_BEACON_MEASURE_TEMP_OFFSET TEMP=100
	_BEACON_MEASURE_TEMP_OFFSET TEMP=110
	_BEACON_MEASURE_TEMP_OFFSET TEMP=120
	_BEACON_MEASURE_TEMP_OFFSET TEMP=130
	_BEACON_MEASURE_TEMP_OFFSET TEMP=140
	_BEACON_MEASURE_TEMP_OFFSET TEMP=150
	_BEACON_MEASURE_TEMP_OFFSET TEMP=160
	_BEACON_MEASURE_TEMP_OFFSET TEMP=170
	_BEACON_MEASURE_TEMP_OFFSET TEMP=180
	_BEACON_MEASURE_TEMP_OFFSET TEMP=190
	_BEACON_MEASURE_TEMP_OFFSET TEMP=200
	_BEACON_MEASURE_TEMP_OFFSET TEMP=210
	_BEACON_MEASURE_TEMP_OFFSET TEMP=220
	_BEACON_MEASURE_TEMP_OFFSET TEMP=230
	_BEACON_MEASURE_TEMP_OFFSET TEMP=240
	_BEACON_MEASURE_TEMP_OFFSET TEMP=250

	G0 X{safe_home_x} Y{safe_home_y} Z50 F{speed}
	SET_HEATER_TEMPERATURE HEATER={"extruder" if default_toolhead == 0 else "extruder1"} TARGET=0

	RATOS_ECHO PREFIX="BEACON" MSG="Test finsihed!"
	ENABLE_DEBUG	


[gcode_macro _BEACON_MEASURE_TEMP_OFFSET]
gcode:
	# config
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}

	{% set current_x = printer.toolhead.position.x|float %}
	G0 X{current_x + 2} Z5 F{z_speed}
	SET_HEATER_TEMPERATURE HEATER={"extruder" if default_toolhead == 0 else "extruder1"} TARGET={params.TEMP|int}
	TEMPERATURE_WAIT SENSOR={"extruder" if default_toolhead == 0 else "extruder1"} MINIMUM={params.TEMP|int} MAXIMUM={params.TEMP|int + 2}
	G4 P30000
	beacon_poke speed=3 top=5 bottom=-0.3
	RATOS_ECHO PREFIX="BEACON" MSG="{params.TEMP|int}Â°C"


[gcode_macro BEACON_MEASURE_GANTRY_TWIST]
gcode:
	# config
	{% set test_margin = 30 %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set z_hop_speed = printer.configfile.config.ratos_homing.z_hop_speed|float * 60 %}
	{% set z_hop = printer.configfile.config.ratos_homing.z_hop|float %}
	{% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
	{% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printable_x_max / 2 %}
	{% endif %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printable_y_max / 2 %}
	{% endif %}

	MAYBE_HOME

	{% set needs_rehoming = False %}
	{% if printer.z_tilt is defined and not printer.z_tilt.applied %}
		RATOS_ECHO MSG="Adjusting Z tilt..."
		Z_TILT_ADJUST
		RATOS_ECHO MSG="Rehoming Z after Z tilt adjustment..."
		{% set needs_rehoming = True %}
	{% endif %}
	{% if printer.quad_gantry_level is defined and not printer.quad_gantry_level.applied %}
	 	RATOS_ECHO MSG="Running quad gantry leveling..."
		QUAD_GANTRY_LEVEL 
		RATOS_ECHO MSG="Rehoming Z after quad gantry leveling..."
		{% set needs_rehoming = True %}
	{% endif %}

	# Home again as Z will have changed after automatic bed leveling and bed heating.
	{% if needs_rehoming %}
		G0 Z{z_hop} F{z_hop_speed}
		G0 X{safe_home_x} Y{safe_home_y} F{speed}
		{% if printer.configfile.settings.beacon is defined and beacon_contact_z_homing %}
			BEACON_AUTO_CALIBRATE  
			G0 Z{z_hop} F{z_hop_speed}
			G0 X{safe_home_x} Y{safe_home_y} F{speed}
		{% else %}
			G28 Z
		{% endif %}
	{% endif %}

	G0 Z{z_hop} F{z_speed}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
	BEACON_AUTO_CALIBRATE
	
	M118 Drop
	beacon_offset_compare
	M118 Center
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{test_margin} Y{test_margin} F{speed}
	M118 Front Left
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{safe_home_x} Y{test_margin} F{speed}
	M118 Front Center
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{printable_x_max - test_margin} Y{test_margin} F{speed}
	M118 Front Right
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{printable_x_max - test_margin} Y{printable_y_max - test_margin} F{speed}
	M118 Back Right
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{safe_home_x} Y{printable_y_max - test_margin} F{speed}
	M118 Back Center
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{test_margin} Y{printable_y_max - test_margin} F{speed}
	M118 Back Left
	beacon_offset_compare 

	G0 Z{z_hop} F{z_speed}
	G0 X{safe_home_x} Y{safe_home_y} F{speed}
